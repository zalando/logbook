{
  "groups": [
    {
      "name": "logbook",
      "type": "org.zalando.logbook.autoconfigure.LogbookProperties",
      "sourceType": "org.zalando.logbook.autoconfigure.LogbookProperties"
    },
    {
      "name": "logbook.predicate",
      "type": "org.zalando.logbook.autoconfigure.LogbookProperties$PredicateProperties",
      "sourceType": "org.zalando.logbook.autoconfigure.LogbookProperties"
    },
    {
      "name": "logbook.obfuscate",
      "type": "org.zalando.logbook.autoconfigure.LogbookProperties$Obfuscate",
      "sourceType": "org.zalando.logbook.autoconfigure.LogbookProperties"
    },
    {
      "name": "logbook.write",
      "type": "org.zalando.logbook.autoconfigure.LogbookProperties$Write",
      "sourceType": "org.zalando.logbook.autoconfigure.LogbookProperties"
    },
    {
      "name": "logbook.filter",
      "type": "org.zalando.logbook.autoconfigure.LogbookProperties$Filter",
      "sourceType": "org.zalando.logbook.autoconfigure.LogbookProperties"
    }
  ],
  "hints": [
    {
      "name": "logbook.format.style",
      "values": [
        {
          "value": "curl"
        },
        {
          "value": "http"
        },
        {
          "value": "json"
        },
        {
          "value": "splunk"
        }
      ]
    },
    {
      "name": "logbook.strategy",
      "values": [
        {
          "value": "default"
        },
        {
          "value": "status-at-least"
        },
        {
          "value": "body-only-if-status-at-least"
        },
        {
          "value": "without-body"
        }
      ]
    },
    {
      "name": "logbook.filter.form-request-mode",
      "values": [
        {
          "value": "BODY"
        },
        {
          "value": "PARAMETER"
        },
        {
          "value": "OFF"
        }
      ]
    },
    {
      "name": "logbook.attribute-extractors.type",
      "values": [
        {
          "value": "JwtFirstMatchingClaimExtractor"
        },
        {
          "value": "JwtAllMatchingClaimsExtractor"
        }
      ]
    }
  ],
  "properties": [
    {
      "name": "logbook.format.style",
      "type": "java.lang.String",
      "defaultValue": "json",
      "description": "Log output format."
    },
    {
      "name": "logbook.filter.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enables/disables servlet filter support."
    },
    {
      "name": "logbook.secure-filter.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enables/disables security servlet filter support."
    },
    {
      "name": "logbook.strategy",
      "type": "java.lang.String",
      "defaultValue": "default",
      "description": "Logging strategy."
    },
    {
      "name": "logbook.minimum-status",
      "type": "java.lang.Integer",
      "defaultValue": 400,
      "description": "Minimum status code for conditional strategies."
    },
    {
      "name": "logbook.httpclient.decompress-response",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Enables/disables additional decompression process for HttpClient with gzip encoded body (to logging purposes only)."
    },
    {
      "name": "logbook.include",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": [],
      "description": "Include only certain URLs (if defined).",
      "deprecation": {
        "level": "warning",
        "replacement": "logbook.predicate.include"
      }
    },
    {
      "name": "logbook.exclude",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": [],
      "description": "Exclude certain URLs (overrides logbook.include).",
      "deprecation": {
        "level": "warning",
        "replacement": "logbook.predicate.exclude"
      }
    },
    {
      "name": "logbook.predicate.include",
      "type": "java.util.List<org.zalando.logbook.autoconfigure.LogbookProperties.LogbookPredicate>",
      "defaultValue": [],
      "description": "Include only certain paths and methods (if defined)."
    },
    {
      "name": "logbook.predicate.exclude",
      "type": "java.util.List<org.zalando.logbook.autoconfigure.LogbookProperties.LogbookPredicate>",
      "defaultValue": [],
      "description": "Exclude certain paths and methods (overrides logbook.predicate.include.urls)."
    },
    {
      "name": "logbook.obfuscate.headers",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": ["Authorization"],
      "description": "HTTP headers to be obfuscated."
    },
    {
      "name": "logbook.obfuscate.paths",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": [],
      "description": "HTTP paths to be obfuscated. Accepts patterns in the form /myApp/orders/{secret}/order."
    },
    {
      "name": "logbook.obfuscate.parameters",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": ["access_token"],
      "description": "HTTP query parameter names to be obfuscated."
    },
    {
      "name": "logbook.obfuscate.replacement",
      "type": "java.lang.String",
      "defaultValue": "XXX",
      "description": "A value to be used instead of an obfuscated one."
    },
    {
      "name": "logbook.obfuscate.json-body-fields",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": [],
      "description": "List of JSON body fields to be obfuscated."
    },
    {
      "name": "logbook.write.max-body-size",
      "type": "java.lang.Integer",
      "defaultValue": -1,
      "description": "Max body size before it's truncated."
    },
    {
      "name": "logbook.write.chunk-size",
      "type": "java.lang.Integer",
      "defaultValue": 0,
      "description": "Split log lines into smaller chunks of size up-to `chunk-size`."
    },
    {
      "name": "logbook.filter.form-request-mode",
      "type": "org.zalando.logbook.servlet.FormRequestMode",
      "defaultValue": "BODY",
      "description": "Determines how form requests are handled."
    },
    {
      "name": "logbook.filters.body.default-enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enables/disables default body filter."
    },
    {
      "name": "logbook.attribute-extractors",
      "type": "java.util.List<org.zalando.logbook.autoconfigure.LogbookProperties.ExtractorProperty>",
      "defaultValue": [],
      "description": "A list of attribute extractors to use."
    },
    {
      "name": "logbook.attribute-extractors.type",
      "type": "java.lang.String",
      "description": "The simple name of the attribute extractor class."
    },
    {
      "name": "logbook.attribute-extractors.claim-names",
      "type": "java.util.List<java.lang.String>",
      "defaultValue": ["sub"],
      "description": "A list of claim names to extract. JwtFirstMatchingClaimExtractor extracts the first matching claim from this list, while JwtAllMatchingClaimsExtractor extracts all of the matching claims."
    },
    {
      "name": "logbook.attribute-extractors.claim-key",
      "type": "java.lang.String",
      "defaultValue": "Subject",
      "description": "This can only be specified for JwtFirstMatchingClaimExtractor. It is the key name for which the first matching claim is attributed."
    }
  ]
}
